<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC   "-//mybatis.org//DTD Mapper 3.0//EN"
   "http://mybatis.org/dtd/mybatis-3-mapper.dtd"
>

<mapper namespace="com.withcare.search.dao.SearchDAO">

	<!-- 검색어 저장 -->
	<insert id="insertSearch"
		parameterType="com.withcare.search.dto.SearchDTO">
		<if test="sch_keyword != null and sch_keyword.trim() != ''">
			INSERT INTO search (sch_id, board_idx, sch_keyword,
			sch_type)
			VALUES (#{sch_id}, #{board_idx}, #{sch_keyword}, #{sch_type})
		</if>
	</insert>

	<!-- 최근 키워드 중복 체크 -->
	<select id="recentKeyword" parameterType="map" resultType="int">
		SELECT EXISTS (
		SELECT 1 FROM search
		WHERE sch_id = #{sch_id}
		AND
		sch_keyword = #{sch_keyword}
		AND sch_date >= NOW() - INTERVAL 3 DAY
		)
	</select>

	<!-- 게시글에서 board_idx 조회 -->
	<!-- <select id="findBoardIdxForSearch" parameterType="com.withcare.search.dto.SearchDTO" 
		resultType="int"> SELECT board_idx FROM post WHERE post_blind_yn = false 
		<choose> <when test="sch_type == '제목'"> AND post_title LIKE CONCAT('%', #{sch_keyword}, 
		'%') </when> <when test="sch_type == '제목+내용'"> AND (post_title LIKE CONCAT('%', 
		#{sch_keyword}, '%') OR post_content LIKE CONCAT('%', #{sch_keyword}, '%')) 
		</when> <when test="sch_type == '작성자'"> AND id LIKE CONCAT('%', #{sch_keyword}, 
		'%') </when> </choose> </select> -->


	<!-- 검색 결과 조회 (SELECT) -->
	<select id="getSearchResult"
		parameterType="com.withcare.search.dto.SearchDTO"
		resultType="com.withcare.search.dto.SearchResultDTO">
		SELECT
		p.post_idx,
		p.board_idx,
		p.post_title AS title,
		p.post_content AS
		content,
		p.id AS writer,
		p.post_create_date AS created_date,
		p.post_view_cnt,
		COUNT(l.post_idx) as like_count
		FROM post p
		LEFT JOIN
		likeyn l ON p.post_idx = l.post_idx
		WHERE p.post_blind_yn = false
		AND
		p.board_idx = #{board_idx}  <!-- 게시판 필터링 조건 추가 -->
		<choose>
			<when test="sch_type == '제목'">
				AND p.post_title LIKE CONCAT('%', #{sch_keyword},'%')
			</when>
			<when test="sch_type == '내용'">
				AND p.post_content LIKE CONCAT('%',
				#{sch_keyword},'%')
			</when>
			<when test="sch_type == '제목+내용'">
				AND (p.post_title LIKE CONCAT('%',
				#{sch_keyword},'%')
				OR p.post_content LIKE CONCAT('%',
				#{sch_keyword}, '%'))
			</when>
			<when test="sch_type == '작성자'">
				AND p.id LIKE CONCAT('%', #{sch_keyword}, '%')
			</when>
		</choose>
		GROUP BY p.post_idx, p.board_idx, p.post_title, p.post_content, p.id,
		p.post_create_date, p.post_view_cnt
		ORDER BY p.post_create_date DESC
		LIMIT #{pageSize} OFFSET #{offset}
	</select>

	<!-- 검색 결과 총 개수 조회 -->
	<select id="getSearchResultCount"
		parameterType="com.withcare.search.dto.SearchDTO" resultType="int">
		SELECT COUNT(DISTINCT p.post_idx)
		FROM post p
		WHERE p.post_blind_yn =
		false
		AND p.board_idx = #{board_idx}  <!-- 게시판 필터링 조건 추가 -->
		<choose>
			<when test="sch_type == '제목'">
				AND p.post_title LIKE CONCAT('%', #{sch_keyword},'%')
			</when>
			<when test="sch_type == '내용'">
				AND p.post_content LIKE CONCAT('%',
				#{sch_keyword},'%')
			</when>
			<when test="sch_type == '제목+내용'">
				AND (p.post_title LIKE CONCAT('%',
				#{sch_keyword},'%')
				OR p.post_content LIKE CONCAT('%',
				#{sch_keyword}, '%'))
			</when>
			<when test="sch_type == '작성자'">
				AND p.id LIKE CONCAT('%', #{sch_keyword}, '%')
			</when>
		</choose>
	</select>

	<!-- 사용자 최근 72시간 검색어 개수 조회 -->
	<select id="searchHistory" parameterType="String"
		resultType="int">
		SELECT COUNT(*) FROM search
		WHERE sch_id = #{sch_id}
		AND sch_date >=
		NOW() - INTERVAL 3 DAY <!-- 3일 이내 -->
	</select>

	<!-- 최근 검색어 목록 -->
	<!-- <select id="searchRecent" parameterType="String" resultType="com.withcare.search.dto.SearchDTO"> 
		SELECT sch_keyword, MAX(sch_date) AS sch_date FROM search WHERE sch_id = 
		#{sch_id} AND sch_date >= NOW() - INTERVAL 3 DAY 3일 이내 GROUP BY sch_keyword 
		ORDER BY sch_date DESC 최근 검색 순 LIMIT 10 10개 </select> -->


	<select id="searchRecent" parameterType="String"
		resultType="com.withcare.search.dto.SearchDTO">
		SELECT
		sch_keyword,
		COUNT(*) as count,
		MAX(sch_date) as recent_date
		FROM search
		WHERE sch_id = #{sch_id}
		AND sch_date >= NOW() - INTERVAL 3 DAY
		GROUP BY sch_keyword
		ORDER BY recent_date DESC, count DESC  <!-- 최근 검색 시간 우선, 그 다음 검색 횟수 -->
		LIMIT 5
	</select>


	<!-- 가장 최근 검색어 기반 추천 게시글 -->
	<select id="recommendPost" parameterType="String"
		resultType="com.withcare.search.dto.SearchResultDTO">
		SELECT
		p.post_idx,
		p.board_idx,
		p.post_title AS title,
		p.post_content AS
		content,
		p.id AS writer,
		p.post_create_date AS created_date,
		p.post_view_cnt,
		COUNT(l.post_idx) as like_count
		FROM post p
		LEFT JOIN
		likeyn l ON p.post_idx = l.post_idx
		WHERE p.post_blind_yn = false <!-- 블라인드 
			게시글 안 보여줌 -->
		AND (p.post_title LIKE CONCAT('%', #{keyword}, '%')
		OR p.post_content
		LIKE CONCAT('%', #{keyword}, '%')) <!-- 제목 or 내용 -->
		GROUP BY p.post_idx, p.board_idx, p.post_title, p.post_content, p.id,
		p.post_create_date, p.post_view_cnt
		ORDER BY like_count DESC <!-- 추천순 -->
		LIMIT 5
	</select>

	<!-- 로그인 X or 검색 기록 X 시 추천 게시글 -->
	<select id="recommendDefault"
		resultType="com.withcare.search.dto.SearchResultDTO">
		SELECT
		p.post_idx,
		p.board_idx,
		p.post_title AS title,
		p.post_content AS
		content,
		p.id AS writer,
		p.post_create_date AS created_date,
		COUNT(l.post_idx) AS like_count
		FROM post p
		LEFT JOIN likeyn l ON
		p.post_idx = l.post_idx
		AND l.like_type = 1
		WHERE p.post_blind_yn =
		FALSE <!-- 블라인드 게시글 안 보여줌 -->
		AND p.post_create_date >= NOW() - INTERVAL 1 MONTH <!-- 1달 이내 게시글 -->
		GROUP BY p.post_idx, p.board_idx, p.post_title, p.post_content, p.id,
		p.post_create_date
		ORDER BY like_count DESC <!-- 추천순 -->
		LIMIT 5 <!-- 5개 -->
	</select>

	<!-- 최근 72시간 전체 인기 검색어 TOP 10 -->
	<select id="searchPopular" resultType="map">
		SELECT sch_keyword
		FROM search
		WHERE sch_date >= NOW() - INTERVAL 72
		HOUR <!-- 72시간 설정 -->
		GROUP BY sch_keyword
		ORDER BY COUNT(*) DESC
		LIMIT 10 <!-- 10개 보여주기 -->
	</select>

	<!-- 로그인 사용자 프로필 정보 가져오기 -->
	<select id="profileCancer" parameterType="string"
		resultType="com.withcare.profile.dto.ProfileDTO">
		SELECT
		p.id,
		p.cancer_idx,
		c.cancer_name,
		p.stage_idx,
		s.stage_name
		FROM profile p
		LEFT JOIN cancer c ON p.cancer_idx =
		c.cancer_idx
		LEFT JOIN stage s ON p.stage_idx = s.stage_idx
		WHERE p.id =
		#{id}
	</select>

	<!-- 프로필 정보로 검색하기 (최신순) -->
	<select id="searchCancer" resultType="com.withcare.search.dto.SearchResultDTO">
		SELECT
			p.post_idx,
			p.board_idx,
			p.post_title AS title,
			p.post_content AS content,
			p.id AS writer,
			p.post_create_date AS created_date,
			IFNULL(l.like_count, 0) AS like_count,
			CASE
				<choose>
					<when test="cancerKeyword != null and stageKeyword != null">
						WHEN (p.post_title LIKE CONCAT('%', #{cancerKeyword}, '%') OR p.post_content LIKE CONCAT('%', #{cancerKeyword}, '%'))
						AND (p.post_title LIKE CONCAT('%', #{stageKeyword}, '%') OR p.post_content LIKE CONCAT('%', #{stageKeyword}, '%')) THEN 1
						WHEN (p.post_title LIKE CONCAT('%', #{cancerKeyword}, '%') OR p.post_content LIKE CONCAT('%', #{cancerKeyword}, '%')) THEN 2
						WHEN (p.post_title LIKE CONCAT('%', #{stageKeyword}, '%') OR p.post_content LIKE CONCAT('%', #{stageKeyword}, '%')) THEN 3
						ELSE 4
					</when>
					<when test="cancerKeyword != null">
						WHEN (p.post_title LIKE CONCAT('%', #{cancerKeyword}, '%') OR p.post_content LIKE CONCAT('%', #{cancerKeyword}, '%')) THEN 2
						ELSE 4
					</when>
					<when test="stageKeyword != null">
						WHEN (p.post_title LIKE CONCAT('%', #{stageKeyword}, '%') OR p.post_content LIKE CONCAT('%', #{stageKeyword}, '%')) THEN 3
						ELSE 4
					</when>
					<otherwise>
						4
					</otherwise>
				</choose>
			END AS relevance
		FROM post p
		LEFT JOIN (
			SELECT post_idx, COUNT(*) AS like_count
			FROM likeyn
			WHERE like_type = 1
			GROUP BY post_idx
		) l ON p.post_idx = l.post_idx
		WHERE p.board_idx in (5, 6)
		AND p.post_blind_yn = FALSE
		AND p.post_create_date >= NOW() - INTERVAL 1 YEAR
		ORDER BY relevance ASC, like_count DESC, p.post_create_date DESC
		LIMIT 20
	</select>


</mapper>