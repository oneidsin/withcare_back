<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC   "-//mybatis.org//DTD Mapper 3.0//EN"
   "http://mybatis.org/dtd/mybatis-3-mapper.dtd"
>

<mapper namespace="com.withcare.search.dao.SearchDAO">

   <!-- 검색어 저장 -->
   <insert id="insertSearch" parameterType="com.withcare.search.dto.SearchDTO">
      INSERT INTO search (sch_id, board_idx, sch_keyword, sch_type)
      	VALUES (#{sch_id}, #{board_idx},#{sch_keyword}, #{sch_type})
   </insert>

	<!-- 최근 키워드 중복 체크 -->
	<select id="recentKeyword" parameterType="map" resultType="boolean">
      SELECT EXISTS (
      	SELECT 1 FROM search
          WHERE sch_id = #{sch_id}
          AND sch_keyword = #{sch_keyword}
          AND sch_date >= NOW() - INTERVAL 3 DAY
      )
	</select>

	<!-- 게시글에서 board_idx 조회 -->
   	<select id="findBoardIdxForSearch" parameterType="com.withcare.search.dto.SearchDTO" resultType="int">
      SELECT board_idx FROM post WHERE post_blind_yn = false
      <choose>
         <when test="sch_type == '제목'">
            AND post_title LIKE CONCAT('%', #{sch_keyword}, '%')
         </when>
         <when test="sch_type == '제목+내용'">
            AND (post_title LIKE CONCAT('%', #{sch_keyword}, '%')
            OR post_content LIKE CONCAT('%', #{sch_keyword}, '%'))
         </when>
         <when test="sch_type == '작성자'">
            AND id LIKE CONCAT('%', #{sch_keyword}, '%')
         </when>
      </choose>
   </select>

   <!-- 검색 결과 조회 (SELECT) -->
   <select id="getSearchResult" parameterType="com.withcare.search.dto.SearchDTO" resultType="com.withcare.search.dto.SearchResultDTO">
      SELECT
	      p.post_idx,
	      p.board_idx,
	      p.post_title AS title,
	      p.post_content AS content,
	      p.id AS writer,
	      p.post_create_date AS created_date,
	      p.post_view_cnt
      FROM post p
      LEFT JOIN profile pr ON p.id = pr.id
      WHERE p.post_blind_yn = false
      <choose>
         <when test="sch_type == '제목'">
            AND p.post_title LIKE CONCAT('%', #{sch_keyword},'%')
         </when>
         <when test="sch_type == '제목+내용'">
            AND (p.post_title LIKE CONCAT('%', #{sch_keyword},'%')
            	OR p.post_content LIKE CONCAT('%', #{sch_keyword}, '%'))
         </when>
         <when test="sch_type == '작성자'">
            AND p.id LIKE CONCAT('%', #{sch_keyword}, '%')
         </when>
      </choose>
   </select>

   <!-- 최근 검색어 목록 -->
   <select id="searchRecent" parameterType="String" resultType="com.withcare.search.dto.SearchDTO">
      SELECT sch_keyword FROM search WHERE sch_id = #{sch_id}
      	AND sch_date >= NOW() - INTERVAL 3 DAY
		  	GROUP BY sch_keyword
		    ORDER BY sch_date DESC LIMIT 10
   </select>
   
   <!-- 가장 최근 검색어 기반 추천 게시글 -->
   <select id="recommedPost" parameterType="String" resultType="com.withcare.search.dto.SearchResultDTO">
		SELECT
		    p.post_idx,
		    p.board_idx,
		    p.post_title AS title,
		    p.post_content AS content,
		    p.id AS writer,
		    p.post_create_date AS created_date,
		    p.post_view_cnt,
		    COUNT(l.post_idx) as like_count
		FROM post p
		LEFT JOIN likeYn l ON p.post_idx = l.post_idx
		WHERE p.post_blind_yn = false
		AND (p.post_title LIKE CONCAT('%', #{keyword}, '%')
		     OR p.post_content LIKE CONCAT('%', #{keyword}, '%'))
		GROUP BY p.post_idx, p.board_idx, p.post_title, p.post_content, p.id, p.post_create_date, p.post_view_cnt
		ORDER BY like_count DESC
		LIMIT 5
	</select>

	<!-- 로그인 X or 검색 기록 X 시 추천 게시글 -->
	<select id="recommendDefault" resultType="com.withcare.search.dto.SearchResultDTO">
		SELECT
		    p.post_idx,
		    p.board_idx,
		    p.post_title AS title,
		    p.post_content AS content,
		    p.id AS writer,
		    p.post_create_date AS created_date,
		    COUNT(l.post_idx) AS like_count
		FROM post p
		LEFT JOIN likeYn l ON p.post_idx = l.post_idx AND l.like_type = 1
		WHERE p.post_blind_yn = FALSE
		  AND p.post_create_date >= NOW() - INTERVAL 1 MONTH
		GROUP BY p.post_idx, p.board_idx, p.post_title, p.post_content, p.id, p.post_create_date
		ORDER BY like_count DESC
		LIMIT 5
	</select>

	<!-- 최근 72시간 전체 인기 검색어 TOP 10 -->
	<select id="searchPopular" resultType="map">
	  SELECT sch_keyword, COUNT(*) AS count FROM search
	  	WHERE sch_date >= NOW() - INTERVAL 3 DAY
	  	GROUP BY sch_keyword
	  	ORDER BY count DESC
	  	LIMIT 10
	</select>
</mapper>