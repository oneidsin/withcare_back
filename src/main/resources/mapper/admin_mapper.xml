<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC   "-//mybatis.org//DTD Mapper 3.0//EN"
   "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
   
   <mapper namespace="com.withcare.admin.dao.AdminDAO">
   	
   	<!-- 유저 레벨 조회 -->
	   	<select id="userLevel" parameterType="String" resultType="int">
	   		SELECT lv_idx FROM member WHERE id = #{id}
	   	</select>
   	
   	<!-- 관리자 권한 부여 -->
   		<update id="levelUpdate" parameterType="map">
		      UPDATE member SET lv_idx = #{lv_idx}
  				<if test="lv_idx == 7">
    				, admin_yn = TRUE
  				</if>
 			   WHERE id = #{id}
   		</update>
   		
	<!-- 관리자 전용 회원 리스트 조회 -->
		<select id="adminMemberList" resultType="com.withcare.admin.dto.AdminMemberDTO">
		  SELECT 
		    m.id,
		    m.admin_yn,
		    m.block_yn,
		    m.user_del_yn,
		    m.join_date,
		    m.access_date,
		    bl.block_start_date,
		    bl.block_end_date
		  FROM member m
		  LEFT JOIN (
		    SELECT blocked_id, block_start_date, block_end_date
		    FROM block_list
		    WHERE (blocked_id, block_start_date) IN (
		      SELECT blocked_id, MAX(block_start_date)
		      FROM block_list
		      GROUP BY blocked_id
		    )
		  ) bl ON m.id = bl.blocked_id
		  <where> 
		<!-- 검색어 있을 경우 -->
		    <if test="searchId != null and searchId != ''">
		      AND m.id LIKE CONCAT('%', #{searchId}, '%')
		    </if>
	    <!-- 차단 된 사용자 검색 -->
		    <if test="blockFilter == 'blocked'">
		      AND m.block_yn = TRUE
		    </if>
	    <!-- 차단 안 된 사용자 검색 -->
		    <if test="blockFilter == 'unblocked'">
		      AND m.block_yn = FALSE
		    </if>
		  </where>
		  <choose>
	  	<!-- 검색 필드 ex) access_date, join_date -->
		    <when test="sortField != null and sortOrder != null">
		      ORDER BY ${sortField} ${sortOrder}
		    </when>
		    <otherwise>
	    <!-- 내림차순 정렬 ex) acess_date 최신순) -->
		      ORDER BY m.join_date DESC
		    </otherwise>
		  </choose>
	  	<!-- start 부터 size 개 잘라서 보여줌 -->
		  LIMIT #{size} OFFSET #{start}
		</select>
   		
		<select id="adminMemberDetail" resultType="com.withcare.admin.dto.AdminMemberDetailDTO" parameterType="String">
			SELECT 
			    m.id, m.name, m.email, m.join_date, m.access_date,
			    m.lv_idx, lv.lv_name,
			    m.admin_yn, m.block_yn,
			    bl.block_reason,
			    p.profile_photo, p.intro, p.access_cnt, p.profile_yn,
			    p.cancer_idx, c.cancer_name,
			    p.stage_idx, s.stage_name,
			    b.bdg_idx, b.bdg_name
			FROM member m
			LEFT JOIN profile p ON m.id = p.id
			LEFT JOIN stage s ON p.stage_idx = s.stage_idx
			LEFT JOIN cancer c ON p.cancer_idx = c.cancer_idx
			LEFT JOIN level lv ON m.lv_idx = lv.lv_idx
			LEFT JOIN member_badge mb ON m.id = mb.id AND mb.bdg_sym_yn = true
			LEFT JOIN badge b ON mb.bdg_idx = b.bdg_idx
			LEFT JOIN block_list bl ON m.id = bl.blocked_id AND m.block_yn = true
			WHERE m.id = #{id}
		</select>
   		
   		<!-- 관리자 회원 게시글 리스트 보기 -->
		 <select id="adminMemberPost" parameterType="String" resultType="com.withcare.post.dto.PostDTO">
		    SELECT post_idx, post_title, post_content, post_create_date, post_update_date FROM post
		    WHERE id = #{targetId}
		    ORDER BY 
		        CASE 
		            WHEN post_update_date IS NOT NULL AND post_update_date > post_create_date THEN post_update_date
		            ELSE post_create_date
		        END DESC
		</select>
   		
   		<!-- 관리자 회원 댓글 리스트 보기 -->
   		<select id="adminMemberCom" parameterType="String" resultType="com.withcare.comment.dto.ComDTO">
   			SELECT * FROM comment WHERE id = #{targetId} ORDER BY com_create_date DESC
   		</select>
   		
   		<!-- 관리자 회원 멘션 리스트 보기 -->
   		<select id="adminMemberMen" parameterType="String" resultType="com.withcare.comment.dto.MenDTO">
   			SELECT * FROM mention WHERE men_writer_id = #{targetId} ORDER BY men_create_date DESC
   		</select>
   		
   		<!-- 관리자 회원 추천 게시글 리스트 보기 -->
   		<select id="adminMemberLike" parameterType="String" resultType="com.withcare.post.dto.LikeDislikeDTO">
		    SELECT
		         l.id AS like_id, l.post_idx, l.like_type, l.like_date,
		        p.post_idx, p.post_title, p.post_content, p.id AS post_writer,
		        p.post_create_date, p.post_update_date, p.post_view_cnt
		    FROM likeYn l
		    JOIN post p ON l.post_idx = p.post_idx
		    WHERE l.id = #{targetId} AND l.like_type = 1
		    ORDER BY l.like_date DESC
   		</select>
   		
   		<select id="adminMemberTimeline" parameterType="String" resultType="com.withcare.profile.dto.TimelineDTO">
   			SELECT * FROM timeline WHERE time_user_id = #{id} AND time_public_yn = 1 ORDER BY day DESC
   		</select>
   		
   </mapper>