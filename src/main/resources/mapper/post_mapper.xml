<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC   "-//mybatis.org//DTD Mapper 3.0//EN"
   "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
   
   <mapper namespace="com.withcare.post.dao.PostDAO">
   		
   		<!-- Í≤åÏãúÍ∏Ä ÏûëÏÑ± -->
		<insert id="postWrite" parameterType="com.withcare.post.dto.PostDTO" useGeneratedKeys="true" keyProperty="post_idx" keyColumn="post_idx">
		    INSERT INTO post (board_idx, id, post_title, post_content, com_yn, post_blind_yn, anony_yn)
		    VALUES (#{board_idx}, #{id}, #{post_title}, #{post_content}, #{com_yn}, #{post_blind_yn}, #{anony_yn})
		</insert>
   		
   		<!-- ÏûëÏÑ±Ïûê Ï†ïÎ≥¥ Í∞ÄÏ†∏Ïò§Í∏∞ (post_idx Ïóê ÎßûÎäî) -->
   		<select id="postIdx" parameterType="int" resultType="String">
		    SELECT * FROM post WHERE post_idx = #{post_idx}
		</select>
		
   		<!-- ÏûëÏÑ±Ïûê ID Í∞ÄÏ†∏Ïò§Í∏∞ (post_idx Ïóê ÎßûÎäî) -->
	    <select id="postWriter" parameterType="int" resultType="String">
	        SELECT id FROM post WHERE post_idx = #{post_idx}
	    </select>
		
		<!-- level Í∞ÄÏ†∏Ïò§Í∏∞ (Í¥ÄÎ¶¨Ïûê ÌôïÏù∏)-->
		<select id="userLevel" parameterType="String" resultType="int">
		    SELECT IFNULL(lv_idx,0) FROM member WHERE id = #{id}
		</select>
		            
		<select id="boardLevel" parameterType="int" resultType="int">
		    SELECT board_idx FROM post WHERE post_idx = #{post_idx}
		</select>
   		
   		<!-- Í≤åÏãúÍ∏Ä ÏàòÏ†ï (post_idx Î°ú Í≤åÏãúÍ∏Ä Í∞ÄÏ†∏ÏôÄÏÑú Ï†úÎ™©, ÎÇ¥Ïö© ÏàòÏ†ï) -->
   		<update id="postUpdate" parameterType="com.withcare.post.dto.PostDTO">
   			UPDATE post SET post_title = #{post_title}, post_content = #{post_content}, board_idx = #{board_idx}, com_yn = #{com_yn}
   				WHERE post_idx = #{post_idx}
   		</update>
   		
   		<!-- Í≤åÏãúÍ∏Ä Î∏îÎùºÏù∏Îìú Ï≤òÎ¶¨ (Í¥ÄÎ¶¨Ïûê or ÏûëÏÑ±Ïûê) -->
   		<update id="postDelete" parameterType="com.withcare.post.dto.PostDTO">
   			UPDATE post SET post_blind_yn = true WHERE post_idx = #{post_idx}
   		</update>
   		
   		<!-- Í≤åÏãúÍ∏Ä ÏÉÅÏÑ∏Î≥¥Í∏∞ -->
		<select id="postDetail" parameterType="int" resultMap="PostResultMap">
		  SELECT 
		    p.post_idx, p.board_idx, p.post_title, p.post_content,
		    p.post_view_cnt, p.com_yn, p.post_create_date, p.post_update_date,
		    p.post_blind_yn, p.anony_yn,
		    CASE WHEN p.anony_yn = TRUE THEN 'anonymous' ELSE p.id END AS writer
		  FROM post p
		  WHERE post_idx=#{post_idx} AND (post_blind_yn = false OR post_blind_yn IS NULL)
		</select>
   		
   		<!-- Ï°∞ÌöåÏàò Ï¶ùÍ∞Ä (ÏÉÅÏÑ∏Î≥¥Í∏∞ Ïãú) -->
   		<update id="upHit">
   			UPDATE post SET post_view_cnt = post_view_cnt+1 WHERE post_idx = #{post_idx}
   		</update>
   		
   		<!-- Í≤åÏãúÍ∏Ä Î™©Î°ù Í∞ÄÏ†∏Ïò§Í∏∞ (Í≤åÏãúÌåê idxÏóê ÎßûÎäî Í≤åÏãúÍ∏ÄÎßå Î∂àÎü¨ÏòµÎãàÎã§. ÌòÑÏû¨ 5Í∞úÏî© ÏÑ§Ï†ïÎê®. sortÏóê ÌÉÄÏûÖ ÏÑ§Ï†ïÌïòÎ©¥ Ï∂îÏ≤úÏàú, ÏµúÏã†ÏàúÏúºÎ°ú Î≥º Ïàò ÏûàÏùå.) -->
		<select id="postList" resultMap="PostResultMap">
		  SELECT 
		    p.post_idx, p.board_idx, p.post_title, p.post_content,
		    p.post_view_cnt, p.com_yn, p.post_create_date, p.post_update_date,
		    p.post_blind_yn, p.anony_yn,
		    CASE WHEN p.anony_yn = TRUE THEN 'ÏùµÎ™Ö' ELSE p.id END AS writer
		  FROM post p
		  <choose>
		    <when test="param4 == 'recommend'">
		      LEFT JOIN (
		        SELECT post_idx, COUNT(*) AS like_cnt
		        FROM likeyn
		        WHERE like_type = 1
		        GROUP BY post_idx
		      ) l ON p.post_idx = l.post_idx
		    </when>
		  </choose>
		  WHERE p.board_idx = #{param3}
		    AND (p.post_blind_yn = false OR p.post_blind_yn IS NULL)
		    
		  <!-- üî• Í≤ÄÏÉâ Ï°∞Í±¥ÏùÄ Ïó¨Í∏∞ÏÑú Î∂ÑÍ∏∞ -->
		  <if test="searchType != null and keyword != null and keyword != ''">
		    <choose>
		      <when test="searchType == 'title'">
		        AND p.post_title LIKE CONCAT('%', #{keyword}, '%')
		      </when>
		      <when test="searchType == 'content'">
		        AND p.post_content LIKE CONCAT('%', #{keyword}, '%')
		      </when>
		      <when test="searchType == 'title_content'">
		        AND (p.post_title LIKE CONCAT('%', #{keyword}, '%')
		          OR p.post_content LIKE CONCAT('%', #{keyword}, '%'))
		      </when>
		      <when test="searchType == 'id'">
		        AND p.id LIKE CONCAT('%', #{keyword}, '%')
		      </when>
		    </choose>
		  </if>
		
		  <!-- üîΩ Ï†ïÎ†¨ Í∏∞Ï§Ä -->
		  <choose>
		    <when test="param4 == 'recommend'">
		      ORDER BY IFNULL(l.like_cnt, 0) DESC, p.post_idx DESC
		    </when>
		    <otherwise>
		      ORDER BY p.post_idx DESC
		    </otherwise>
		  </choose>
		
		  LIMIT #{param2} OFFSET #{param1}
		</select>

		<!-- Ï∂îÏ≤ú Ïàò -->
		<select id="likeCnt" parameterType="int" resultType="int">
			SELECT COUNT(*) FROM likeyn WHERE post_idx=#{param1} AND like_type=1
		</select>
		
		<!-- ÎπÑÏ∂îÏ≤ú Ïàò -->
		<select id="dislikeCnt" parameterType="int" resultType="int">
			SELECT COUNT(*) FROM likeyn WHERE post_idx=#{param1} AND like_type=-1
		</select>
		
		<!-- Í≤åÏãúÍ∏Ä ÌéòÏù¥ÏßÄ Ïàò -->
		<select id="postPages" parameterType="int" resultType="int">
		    SELECT COUNT(*) FROM post WHERE board_idx = #{board_idx} AND (post_blind_yn = false OR post_blind_yn IS NULL)
			<if test="searchType != null and keyword != null and keyword != ''">
				<choose>
				  <when test="searchType == 'title'">
				    AND post_title LIKE CONCAT('%', #{keyword}, '%')
				  </when>
			      <when test="searchType == 'content'">
					  AND post_content LIKE CONCAT('%', #{keyword}, '%')
				  </when>
				  <when test="searchType == 'title_content'">
					  AND (post_title LIKE CONCAT('%', #{keyword}, '%')
					    OR post_content LIKE CONCAT('%', #{keyword}, '%'))
				  </when>
				  <when test="searchType == 'id'">
					  AND id LIKE CONCAT('%', #{keyword}, '%')
				  </when>
					 <otherwise>
					      ORDER BY post_idx DESC
					  </otherwise>
				</choose>		
			</if>  
		</select>
   		
   		<!-- Ï∂îÏ≤ú Ïú†Ìòï -->
		<select id="LikeType" parameterType="map" resultType="int">
			SELECT like_type FROM likeyn WHERE id=#{param1} AND post_idx=#{param2}
		</select>
		
		<!-- Ï∂îÏ≤ú ÏÇΩÏûÖ -->
		<insert id="likeInsert" parameterType="com.withcare.post.dto.LikeDislikeDTO">
			INSERT INTO likeyn(id, post_idx, like_type)
				VALUES(#{id}, #{post_idx}, #{like_type})
		</insert>
				
		<!-- Ï∂îÏ≤ú ÏÇ≠Ï†ú (ÎèôÏùº Ïú†Ï†ÄÍ∞Ä ÎèôÏùº idx Ïóê ÎèôÏùº ÏÉÅÌÉú Ï≤¥ÌÅ¨ÌïòÎ©¥ ÏÇ≠Ï†úÌï©ÎãàÎã§.) -->
		<delete id="likeDelete">
			DELETE FROM likeyn WHERE id = #{param1} AND post_idx = #{param2}
		</delete>
		
		<!-- Ï∂îÏ≤ú ÏÉÅÌÉú Îî∞ÎùºÏÑú ÏàòÏ†ï -->
		<update id="likeUpdate" parameterType="com.withcare.post.dto.LikeDislikeDTO">
			UPDATE likeyn SET like_type = #{like_type}
				WHERE id = #{id} AND post_idx = #{post_idx}
		</update>
   		
   		<!-- ÌååÏùº ÏÇΩÏûÖ -->
		<insert id="fileInsert" parameterType="com.withcare.post.dto.FileDTO" useGeneratedKeys="true" keyProperty="file_idx" keyColumn="file_idx">
		    INSERT INTO file (post_idx, file_url)
		    VALUES (#{post_idx}, #{file_url})
		</insert>
		
		<!-- ÌååÏùº ÏÇ≠Ï†ú (file_idx Í∏∞Ï§Ä)-->
   		<delete id="fileDelete" parameterType="String">
		    DELETE FROM file WHERE file_idx = #{file_idx}
		</delete>
		
		<!-- ÌååÏùº ÏÇ≠Ï†ú (file_url Í∏∞Ï§Ä)-->
	    <delete id="fileDeleteUrl" parameterType="String">
	        DELETE FROM file WHERE file_url = #{file_url}
	    </delete>
		
		<!-- ÌååÏùº Ï†ïÎ≥¥ Í∞ÄÏ†∏Ïò§Í∏∞ -->
		<select id="fileInfo" parameterType="String" resultType="map">
		    SELECT file_idx, file_url, post_idx FROM file WHERE file_idx = #{file_idx}
		</select>
		
		<!-- ÌååÏùº ÏûàÎäî Í≤åÏãúÍ∏Ä Î™©Î°ù Í∞ÄÏ†∏Ïò§Í∏∞ -->
		<select id="fileList" parameterType="int" resultType="map">
		    SELECT file_idx, file_url
		    FROM file
		    WHERE post_idx = #{post_idx}
		</select>
		
		<select id="getBoardIdx" parameterType="int" resultType="int">
			SELECT board_idx FROM post WHERE post_idx = #{postIdx}
		</select>
		
		<resultMap id="PostResultMap" type="com.withcare.post.dto.PostDTO">
		    <id property="post_idx" column="post_idx"/>
		    <result property="board_idx" column="board_idx"/>
		    <result property="post_title" column="post_title"/>
		    <result property="post_content" column="post_content"/>
		    <result property="post_view_cnt" column="post_view_cnt"/>
		    <result property="com_yn" column="com_yn"/>
		    <result property="post_create_date" column="post_create_date"/>
		    <result property="post_update_date" column="post_update_date"/>
		    <result property="post_blind_yn" column="post_blind_yn"/>
		    <result property="anony_yn" column="anony_yn"/>
		    <!-- ÌïµÏã¨ ÎùºÏù∏ -->
		    <result property="id" column="writer"/>
		</resultMap>
		
		
   </mapper>