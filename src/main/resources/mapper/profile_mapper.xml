<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC   "-//mybatis.org//DTD Mapper 3.0//EN"
   "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.withcare.profile.dao.ProfileDAO">

	<!-- <insert id="saveProfile" parameterType="com.withcare.profile.dto.ProfileDTO"> 
		INSERT INTO profile ( id, cancer_idx, stage_idx, profile_photo, intro, profile_yn, 
		access_cnt ) VALUES ( #{id}, #{cancerIdx}, #{stageIdx}, #{profilePhoto}, 
		#{intro}, #{profileYn}, #{accessCnt} ) </insert> -->

	<!-- 프로필 보기 -->
	<select id="getProfileById" parameterType="String"
		resultType="com.withcare.profile.dto.ProfileDTO">
		SELECT
		    m.id,
		    m.name,
			m.lv_idx,
		    CAST(m.year AS CHAR) as year,
		    m.gender,
		    m.email,
		    COALESCE(p.cancer_idx, 0) as cancer_idx,
		    COALESCE(p.stage_idx, 0) as stage_idx,
		    p.profile_photo,
		    p.intro,
		    COALESCE(p.profile_yn, 1) as profile_yn,
		    COALESCE(p.access_cnt, 0) as access_cnt
		    FROM member m
		    LEFT JOIN profile p ON m.id = p.id
		    WHERE m.id = #{id}
	</select>

	<!-- 프로필 수정 -->
	<update id="updateProfile"
		parameterType="com.withcare.profile.dto.ProfileDTO">
		UPDATE member m
	    JOIN profile p ON m.id = p.id
	    SET m.name = #{name},
	        m.year = #{year},
	        m.gender = #{gender},
	        m.email = #{email},
	        p.cancer_idx = #{cancer_idx},
	        p.stage_idx = #{stage_idx},
	        p.profile_photo = #{profile_photo},
	        p.intro = #{intro},
	        p.profile_yn = #{profile_yn}
	    WHERE m.id = #{id}
	</update>

	<!-- 프로필 추가 -->
	<insert id="insertProfile" parameterType="String">
		INSERT INTO profile
		(id, cancer_idx, stage_idx, profile_photo, intro,
		profile_yn,
		access_cnt)
		VALUES (#{id}, NULL, NULL, NULL, NULL, 0, 0)
	</insert>

	<select id="getUserPosts" parameterType="String"
		resultType="com.withcare.post.dto.PostDTO">
		SELECT * FROM post WHERE id = #{id} ORDER BY
		IFNULL(post_update_date,
		post_create_date) DESC
		LIMIT 5
	</select>

	<select id="getUserComments" parameterType="String"
		resultType="com.withcare.comment.dto.ComDTO">
		SELECT * FROM comment WHERE id = #{id} ORDER BY
		com_create_date DESC LIMIT 5
	</select>

	<select id="getUserLikes" parameterType="String"
		resultType="com.withcare.post.dto.LikeDislikeDTO">
		SELECT * FROM likeYn WHERE id = #{id} ORDER BY like_date
		DESC LIMIT 5
	</select>

	<select id="getUserSearches" parameterType="String"
		resultType="com.withcare.search.dto.SearchDTO">
		SELECT * FROM search WHERE sch_id = #{id} ORDER BY sch_date
		DESC LIMIT 5
	</select>

	<select id="getUserMentions" parameterType="String"
		resultType="com.withcare.comment.dto.MenDTO">
		SELECT * FROM mention WHERE men_id = #{id}
		ORDER BY
		COALESCE(men_update_date, men_create_date) DESC LIMIT 5
	</select>

	<!-- 전체 개수만 가져오는 쿼리들 추가 -->
	<select id="getUserPostCount" parameterType="String" resultType="int">
	    SELECT COUNT(*) FROM post WHERE id = #{id}
	</select>
	
	<select id="getUserCommentCount" parameterType="String" resultType="int">
	    SELECT COUNT(*) FROM comment WHERE id = #{id}
	</select>
	
	<select id="getUserLikeCount" parameterType="String" resultType="int">
	    SELECT COUNT(*) FROM likeYn WHERE id = #{id}
	</select>
	
	<select id="getUserTimelineCount" parameterType="String" resultType="int">
	    SELECT COUNT(*) FROM mention WHERE men_id = #{id}
	</select>

	<select id="getUserLvIdx" parameterType="String" resultType="Integer">
  	 	 SELECT lv_idx 
   		 FROM member 
    	WHERE id = #{id}
	</select>

		<!-- 배지 관련 쿼리 추가 -->
	<!-- 공개 사용자 배지 조회 (획득한 배지만) - 기존 DTO 활용 -->
	<select id="getPublicUserBadges" parameterType="String" resultType="java.util.HashMap">
	    SELECT 
	        b.bdg_idx,
	        b.bdg_name,
	        b.bdg_condition,
	        b.bdg_icon,
	        1 as is_acquired,  -- 이미 획득한 배지만 조회하므로 항상 1
	        CASE WHEN ub.bdg_sym_yn = 1 THEN 1 ELSE 0 END as bdg_sym_yn,
	        DATE_FORMAT(ub.bdg_acq_date, '%Y-%m-%d') as acquired_date
	    FROM badge b
	    INNER JOIN user_badge ub ON b.bdg_idx = ub.bdg_idx 
	    WHERE ub.id = #{userId}
	      AND b.bdg_active_yn = 1  -- 활성화된 배지만
	    ORDER BY 
	        ub.bdg_sym_yn DESC,  -- 메인 배지 우선
	        ub.bdg_acq_date DESC  -- 최근 획득 순
	</select>
	
</mapper>
   
   